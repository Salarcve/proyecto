{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\SNEIDER ALARCA\\\\OneDrive\\\\Escritorio\\\\ccitasMedecas-master\\\\screens\\\\create-dates\\\\createdates.js\";\nimport React, { useEffect, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { TouchableHighlight } from 'react-native-gesture-handler';\n\nfunction CreateDates(_ref) {\n  var navigation = _ref.navigation;\n  var image = {\n    uri: 'https://image.freepik.com/foto-gratis/colorido-surtido-medicina-background_43058-360.jpg'\n  };\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      identification = _useState2[0],\n      setidentification = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setname = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastname = _useState6[0],\n      setlastname = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      birthdate = _useState8[0],\n      setbirthdate = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      city = _useState10[0],\n      setcity = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      neighborhood = _useState12[0],\n      setneighborhood = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      phone = _useState14[0],\n      setphone = _useState14[1];\n\n  var createdates = function createdates() {\n    var res;\n    return _regeneratorRuntime.async(function createdates$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(name.length < 1 || identification.length < 1 || lastname.length < 1 || birthdate.length < 1 || city.length < 1 || neighborhood.length < 1 || phone.length < 1)) {\n              _context.next = 4;\n              break;\n            }\n\n            Alert.alert(\"No debe haber ningun campo vacio \");\n            _context.next = 15;\n            break;\n\n          case 4:\n            if (!(phone.length < 10)) {\n              _context.next = 8;\n              break;\n            }\n\n            Alert.alert(\"El telefono debe contener 10 digitos\");\n            _context.next = 15;\n            break;\n\n          case 8:\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.1.17:4000/DatePost', {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                identification: identification,\n                name: name,\n                lastname: lastname,\n                birthdate: birthdate,\n                city: city,\n                neighborhood: neighborhood,\n                phone: phone\n              })\n            }));\n\n          case 10:\n            res = _context.sent;\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 13:\n            Alert.alert(\"Cita agendada exitosamente. \");\n            navigation.goBack();\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    source: image,\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    keyboardType: \"numeric\",\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setidentification(text);\n    },\n    placeholder: \"Identificacion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setname(text);\n    },\n    placeholder: \"Nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setlastname(text);\n    },\n    placeholder: \"Apellido\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setbirthdate(text);\n    },\n    placeholder: \"Fecha de nacimiento\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setcity(text);\n    },\n    placeholder: \"Ciudad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setneighborhood(text);\n    },\n    placeholder: \"Barrio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    keyboardType: \"numeric\",\n    maxLength: 10,\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setphone(text);\n    },\n    placeholder: \"Telefono\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableHighlight, {\n    style: styles.styleButton,\n    onPress: createdates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.textCreateButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Agregar Cita\"))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  textInput: {\n    marginTop: 5,\n    padding: 15,\n    borderColor: 'black',\n    borderRadius: 5,\n    borderWidth: 1,\n    width: Dimensions.get('screen').width * 0.9,\n    backgroundColor: \"white\"\n  },\n  styleButton: {\n    backgroundColor: '#6336C2',\n    padding: 15,\n    width: Dimensions.get('screen').width * 0.9,\n    alignItems: 'center',\n    borderRadius: 80,\n    marginTop: 20\n  },\n  textCreateButton: {\n    color: 'white'\n  },\n  image: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: 'center',\n    width: Dimensions.get('screen').width * 1,\n    alignItems: 'center'\n  }\n});\nexport default CreateDates;","map":{"version":3,"sources":["C:/Users/SNEIDER ALARCA/OneDrive/Escritorio/ccitasMedecas-master/screens/create-dates/createdates.js"],"names":["React","useEffect","useState","TextInput","TouchableHighlight","CreateDates","navigation","image","uri","identification","setidentification","name","setname","lastname","setlastname","birthdate","setbirthdate","city","setcity","neighborhood","setneighborhood","phone","setphone","createdates","length","Alert","alert","fetch","method","headers","Accept","body","JSON","stringify","res","json","goBack","styles","container","textInput","text","styleButton","textCreateButton","StyleSheet","create","flex","backgroundColor","flexDirection","alignItems","marginTop","padding","borderColor","borderRadius","borderWidth","width","Dimensions","get","color","resizeMode","justifyContent"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { Alert, Dimensions, ImageBackground, StyleSheet, Text, View } from 'react-native';\nimport { TextInput } from 'react-native-gesture-handler';\nimport { TouchableHighlight } from 'react-native-gesture-handler';\n\n\nfunction CreateDates({ navigation }) {\n    const image = { uri: 'https://image.freepik.com/foto-gratis/colorido-surtido-medicina-background_43058-360.jpg' };\n    const [identification, setidentification] = useState(\"\");\n    const [name, setname] = useState(\"\");\n    const [lastname, setlastname] = useState(\"\");\n    const [birthdate, setbirthdate] = useState(\"\");\n    const [city, setcity] = useState(\"\");\n    const [neighborhood, setneighborhood] = useState(\"\");\n    const [phone, setphone] = useState(\"\");\n\n    const createdates = async () => {\n        if (name.length < 1 || identification.length < 1 || lastname.length < 1 || birthdate.length < 1 || city.length < 1 || neighborhood.length < 1 || phone.length < 1) {\n            Alert.alert(\"No debe haber ningun campo vacio \")\n\n        } else if (phone.length < 10) {\n            Alert.alert(\"El telefono debe contener 10 digitos\")\n        }\n        else {\n            const res = await fetch('http://192.168.1.17:4000/DatePost',\n                {\n                    method: \"POST\",\n                    headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        identification: identification,\n                        name: name,\n                        lastname: lastname,\n                        birthdate: birthdate,\n                        city: city,\n                        neighborhood: neighborhood,\n                        phone: phone,\n                    })\n                });\n            await res.json();\n            Alert.alert(\"Cita agendada exitosamente. \")\n            navigation.goBack()\n        }\n    }\n    return (\n        <View style={styles.container}>\n            <ImageBackground source={image} style={styles.image}>\n                <TextInput keyboardType=\"numeric\" style={styles.textInput} onChangeText={text => setidentification(text)} placeholder=\"Identificacion\"></TextInput>\n                <TextInput style={styles.textInput} onChangeText={text => setname(text)} placeholder=\"Nombre\"></TextInput>\n                <TextInput style={styles.textInput} onChangeText={text => setlastname(text)} placeholder=\"Apellido\"></TextInput>\n                <TextInput style={styles.textInput} onChangeText={text => setbirthdate(text)} placeholder=\"Fecha de nacimiento\"></TextInput>\n                <TextInput style={styles.textInput} onChangeText={text => setcity(text)} placeholder=\"Ciudad\"></TextInput>\n                <TextInput style={styles.textInput} onChangeText={text => setneighborhood(text)} placeholder=\"Barrio\"></TextInput>\n                <TextInput keyboardType=\"numeric\" maxLength={10} style={styles.textInput} onChangeText={text => setphone(text)} placeholder=\"Telefono\"></TextInput>\n                <TouchableHighlight style={styles.styleButton} onPress={createdates} >\n                    <Text style={styles.textCreateButton}>Agregar Cita</Text>\n                </TouchableHighlight>\n            </ImageBackground>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    textInput: {\n        marginTop: 5,\n        padding: 15,\n        borderColor: 'black',\n        borderRadius: 5,\n        borderWidth: 1,\n        width: Dimensions.get('screen').width * 0.9,\n        backgroundColor: \"white\"\n    },\n    styleButton: {\n        backgroundColor: '#6336C2',\n        padding: 15,\n        width: Dimensions.get('screen').width * 0.9,\n        alignItems: 'center',\n        borderRadius: 80,\n        marginTop: 20\n    },\n    textCreateButton: {\n        color: 'white'\n    },\n    image: {\n        flex: 1,\n        resizeMode: 'cover',\n        justifyContent: 'center',\n        width: Dimensions.get('screen').width * 1,\n        alignItems: 'center',\n\n    },\n\n});\n\nexport default CreateDates;"]},"metadata":{},"sourceType":"module"}